[{"C:\\Users\\Thatiane\\Desktop\\Generation Brasil\\BlogPessoalFrontEnd\\blog-pessoal\\src\\index.tsx":"1","C:\\Users\\Thatiane\\Desktop\\Generation Brasil\\BlogPessoalFrontEnd\\blog-pessoal\\src\\reportWebVitals.ts":"2","C:\\Users\\Thatiane\\Desktop\\Generation Brasil\\BlogPessoalFrontEnd\\blog-pessoal\\src\\App.tsx":"3","C:\\Users\\Thatiane\\Desktop\\Generation Brasil\\BlogPessoalFrontEnd\\blog-pessoal\\src\\components\\estaticos\\navbar\\Navbar.tsx":"4","C:\\Users\\Thatiane\\Desktop\\Generation Brasil\\BlogPessoalFrontEnd\\blog-pessoal\\src\\components\\estaticos\\footer\\Footer.tsx":"5","C:\\Users\\Thatiane\\Desktop\\Generation Brasil\\BlogPessoalFrontEnd\\blog-pessoal\\src\\paginas\\home\\Home.tsx":"6","C:\\Users\\Thatiane\\Desktop\\BlogPessoalFrontEnd\\blog-pessoal\\src\\index.tsx":"7","C:\\Users\\Thatiane\\Desktop\\BlogPessoalFrontEnd\\blog-pessoal\\src\\reportWebVitals.ts":"8","C:\\Users\\Thatiane\\Desktop\\BlogPessoalFrontEnd\\blog-pessoal\\src\\App.tsx":"9","C:\\Users\\Thatiane\\Desktop\\BlogPessoalFrontEnd\\blog-pessoal\\src\\paginas\\home\\Home.tsx":"10","C:\\Users\\Thatiane\\Desktop\\BlogPessoalFrontEnd\\blog-pessoal\\src\\components\\estaticos\\footer\\Footer.tsx":"11","C:\\Users\\Thatiane\\Desktop\\BlogPessoalFrontEnd\\blog-pessoal\\src\\components\\estaticos\\navbar\\Navbar.tsx":"12","C:\\Users\\Thatiane\\Desktop\\BlogPessoalFrontEnd\\blog-pessoal\\src\\paginas\\login\\Login.tsx":"13","C:\\Users\\Thatiane\\Desktop\\BlogPessoalFrontEnd\\blog-pessoal\\src\\paginas\\cadastroUsuario\\CadastroUsuario.tsx":"14","C:\\Users\\Thatiane\\Desktop\\BlogPessoalFrontEnd\\blog-pessoal\\src\\services\\Service.ts":"15","C:\\Users\\Thatiane\\Desktop\\BlogPessoalFrontEnd\\blog-pessoal\\src\\components\\postagens\\listaPostagem\\ListaPostagem.tsx":"16","C:\\Users\\Thatiane\\Desktop\\BlogPessoalFrontEnd\\blog-pessoal\\src\\components\\temas\\listaTema\\ListaTema.tsx":"17","C:\\Users\\Thatiane\\Desktop\\BlogPessoalFrontEnd\\blog-pessoal\\src\\components\\postagens\\tabPostagem\\TabPostagem.tsx":"18","C:\\Users\\Thatiane\\Desktop\\BlogPessoalFrontEnd\\blog-pessoal\\src\\components\\postagens\\cadastroPost\\CadastroPost.tsx":"19","C:\\Users\\Thatiane\\Desktop\\BlogPessoalFrontEnd\\blog-pessoal\\src\\components\\temas\\cadastroTema\\CadastroTema.tsx":"20","C:\\Users\\Thatiane\\Desktop\\BlogPessoalFrontEnd\\blog-pessoal\\src\\components\\postagens\\deletarPostagem\\DeletarPostagem.tsx":"21","C:\\Users\\Thatiane\\Desktop\\BlogPessoalFrontEnd\\blog-pessoal\\src\\components\\temas\\deletarTema\\DeletarTema.tsx":"22","C:\\Users\\Thatiane\\Desktop\\BlogPessoalFrontEnd\\blog-pessoal\\src\\components\\postagens\\modalPostagem\\ModalPostagem.tsx":"23","C:\\Users\\Thatiane\\Desktop\\BlogPessoalFrontEnd\\blog-pessoal\\src\\store\\store.ts":"24","C:\\Users\\Thatiane\\Desktop\\BlogPessoalFrontEnd\\blog-pessoal\\src\\store\\tokens\\tokensReducer.ts":"25","C:\\Users\\Thatiane\\Desktop\\BlogPessoalFrontEnd\\blog-pessoal\\src\\store\\tokens\\actions.ts":"26"},{"size":358,"mtime":1645462778291,"results":"27","hashOfConfig":"28"},{"size":425,"mtime":1645460878342,"results":"29","hashOfConfig":"28"},{"size":339,"mtime":1645467920655,"results":"30","hashOfConfig":"28"},{"size":1871,"mtime":1645471960212,"results":"31","hashOfConfig":"28"},{"size":2102,"mtime":1645470379647,"results":"32","hashOfConfig":"28"},{"size":1536,"mtime":1645470583372,"results":"33","hashOfConfig":"28"},{"size":358,"mtime":1645462778291,"results":"34","hashOfConfig":"35"},{"size":425,"mtime":1645460878342,"results":"36","hashOfConfig":"35"},{"size":2402,"mtime":1646668999733,"results":"37","hashOfConfig":"35"},{"size":2123,"mtime":1646671236113,"results":"38","hashOfConfig":"35"},{"size":2302,"mtime":1646671152472,"results":"39","hashOfConfig":"35"},{"size":3253,"mtime":1646670864320,"results":"40","hashOfConfig":"35"},{"size":3606,"mtime":1646669351744,"results":"41","hashOfConfig":"35"},{"size":3753,"mtime":1645811608860,"results":"42","hashOfConfig":"35"},{"size":1180,"mtime":1645828995949,"results":"43","hashOfConfig":"35"},{"size":2692,"mtime":1646669567768,"results":"44","hashOfConfig":"35"},{"size":2564,"mtime":1645822588974,"results":"45","hashOfConfig":"35"},{"size":2252,"mtime":1645809962214,"results":"46","hashOfConfig":"35"},{"size":4498,"mtime":1646665139625,"results":"47","hashOfConfig":"35"},{"size":2848,"mtime":1645837869676,"results":"48","hashOfConfig":"35"},{"size":2792,"mtime":1645836915075,"results":"49","hashOfConfig":"35"},{"size":2498,"mtime":1645836531285,"results":"50","hashOfConfig":"35"},{"size":1804,"mtime":1646665571526,"results":"51","hashOfConfig":"35"},{"size":195,"mtime":1646668450742,"results":"52","hashOfConfig":"35"},{"size":389,"mtime":1646668366800,"results":"53","hashOfConfig":"35"},{"size":164,"mtime":1646669013022,"results":"54","hashOfConfig":"35"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"d7ohz7",{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":3,"source":null},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},"14ybz3j",{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":4,"source":null},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"77"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"77"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"77"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"77"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"77"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"77"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"77"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Thatiane\\Desktop\\Generation Brasil\\BlogPessoalFrontEnd\\blog-pessoal\\src\\index.tsx",[],[],"C:\\Users\\Thatiane\\Desktop\\Generation Brasil\\BlogPessoalFrontEnd\\blog-pessoal\\src\\reportWebVitals.ts",[],[],"C:\\Users\\Thatiane\\Desktop\\Generation Brasil\\BlogPessoalFrontEnd\\blog-pessoal\\src\\App.tsx",[],[],["142","143"],"C:\\Users\\Thatiane\\Desktop\\Generation Brasil\\BlogPessoalFrontEnd\\blog-pessoal\\src\\components\\estaticos\\navbar\\Navbar.tsx",[],[],"C:\\Users\\Thatiane\\Desktop\\Generation Brasil\\BlogPessoalFrontEnd\\blog-pessoal\\src\\components\\estaticos\\footer\\Footer.tsx",["144","145","146"],[],"C:\\Users\\Thatiane\\Desktop\\Generation Brasil\\BlogPessoalFrontEnd\\blog-pessoal\\src\\paginas\\home\\Home.tsx",[],[],"C:\\Users\\Thatiane\\Desktop\\BlogPessoalFrontEnd\\blog-pessoal\\src\\index.tsx",[],[],["147","148"],"C:\\Users\\Thatiane\\Desktop\\BlogPessoalFrontEnd\\blog-pessoal\\src\\reportWebVitals.ts",[],[],"C:\\Users\\Thatiane\\Desktop\\BlogPessoalFrontEnd\\blog-pessoal\\src\\App.tsx",[],[],"C:\\Users\\Thatiane\\Desktop\\BlogPessoalFrontEnd\\blog-pessoal\\src\\paginas\\home\\Home.tsx",["149","150"],[],"C:\\Users\\Thatiane\\Desktop\\BlogPessoalFrontEnd\\blog-pessoal\\src\\components\\estaticos\\footer\\Footer.tsx",["151","152","153","154"],[],"C:\\Users\\Thatiane\\Desktop\\BlogPessoalFrontEnd\\blog-pessoal\\src\\components\\estaticos\\navbar\\Navbar.tsx",["155"],[],"C:\\Users\\Thatiane\\Desktop\\BlogPessoalFrontEnd\\blog-pessoal\\src\\paginas\\login\\Login.tsx",["156"],[],"C:\\Users\\Thatiane\\Desktop\\BlogPessoalFrontEnd\\blog-pessoal\\src\\paginas\\cadastroUsuario\\CadastroUsuario.tsx",["157","158","159","160"],[],"import React, {useState, useEffect, ChangeEvent} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport User from '../../models/User';\r\nimport { cadastroUsuario } from '../../services/Service';\r\nimport './CadastroUsuario.css';\r\nimport Container from '@mui/material/Container';\r\nimport { Grid, Box, Typography, Button, TextField } from '@material-ui/core';\r\nimport {Link } from 'react-router-dom';\r\n\r\nfunction CadastroUsuario(){\r\n    let history = useHistory();\r\n    const [confirmarSenha, setConfirmarSenha] = useState<String>(\"\")\r\n    const [user, setUser] = useState<User>(\r\n        {\r\n            id: 0,\r\n            nome: '',\r\n            usuario: '',\r\n            senha: '',\r\n        })\r\n\r\n    const [userResult, setUserResult] = useState<User>(\r\n        {\r\n            id: 0,\r\n            nome: '',\r\n            usuario:'',\r\n            senha:'',\r\n        })\r\n    \r\n    useEffect(() =>{\r\n        if(userResult.id != 0){\r\n            history.push(\"/login\")\r\n\r\n        }\r\n    }, [userResult])\r\n\r\n    function confirmarSenhaHandle(e: ChangeEvent<HTMLInputElement>){\r\n        setConfirmarSenha(e.target.value)\r\n    }\r\n\r\n    function updatedModel(e: ChangeEvent<HTMLInputElement>){\r\n\r\n        setUser({\r\n            ...user,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    async function onSubmit(e: ChangeEvent<HTMLFormElement>){\r\n        e.preventDefault()\r\n        if(confirmarSenha == user.senha){\r\n            cadastroUsuario('/usuarios/cadastrar', user, setUserResult)\r\n            alert('Cadastro realizado com sucesso!')\r\n        }else{\r\n            alert('Dados inválidos! Verifique se confirmou a senha corretamente, ou, se já tem um cadastro conosco!')\r\n        }\r\n    }\r\n    return(\r\n        <Grid container direction='row' justifyContent='center' alignItems='center' className= 'caixa'>\r\n           \r\n            <Grid item xs={6}>\r\n                <Box margin={5}>\r\n                <form onSubmit={ onSubmit}>\r\n                        <Typography variant='h3' gutterBottom color='textPrimary' component='h3' align='center' className='txt2'>Faça seu cadastro!</Typography>\r\n                        <TextField value={user.nome} onChange={updatedModel} id='nome' label='nome' variant='outlined' name='nome' margin='normal' fullWidth />\r\n                        <TextField value={user.usuario} onChange={updatedModel} id='usuario' label='usuário' variant='outlined' name='usuario' margin='normal' fullWidth />\r\n                        <TextField value={user.senha} onChange={updatedModel} id='senha' label='senha' variant='outlined' name='senha' margin='normal'  type='password' fullWidth />\r\n                        <TextField value={confirmarSenha} onChange={confirmarSenhaHandle} id='confirmarSenha' label='confirmarSenha' variant='outlined' name='confirmarSenha' margin='normal'   type='password' fullWidth />\r\n                        <Box marginTop={2} textAlign='center'>\r\n                                    \r\n                        <Button  type='submit' variant='contained' className='btCadastrar'>\r\n                                    Cadastrar\r\n                        </Button>\r\n                        <Link to='/login' className='text-decorator-none'>\r\n                            <Button variant='contained' className='btCancelar'>\r\n                                    Cancelar\r\n                            </Button>\r\n                        </Link>\r\n                          \r\n                            \r\n                           \r\n                        </Box>\r\n                    </form>\r\n                </Box>\r\n                \r\n            </Grid>\r\n            <Grid item xs={6} className='imagem2'></Grid>\r\n\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default CadastroUsuario;\r\n\r\n","C:\\Users\\Thatiane\\Desktop\\BlogPessoalFrontEnd\\blog-pessoal\\src\\services\\Service.ts",[],[],"C:\\Users\\Thatiane\\Desktop\\BlogPessoalFrontEnd\\blog-pessoal\\src\\components\\postagens\\listaPostagem\\ListaPostagem.tsx",["161","162","163"],[],"C:\\Users\\Thatiane\\Desktop\\BlogPessoalFrontEnd\\blog-pessoal\\src\\components\\temas\\listaTema\\ListaTema.tsx",["164","165","166","167"],[],"import React, {useState, useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Box, Card, CardActions, CardContent, Button, Typography} from '@material-ui/core';\r\nimport Tema from '../../../models/Tema';\r\nimport './ListaTema.css';\r\nimport useLocalStorage from 'react-use-localstorage';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {busca} from '../../../services/Service';\r\n\r\nfunction ListaTema(){\r\n    const [temas, setTema] = useState<Tema[]>([])\r\n    const [token, setToken] = useLocalStorage('token');\r\n    let history = useHistory();\r\n\r\n    useEffect(()=>{\r\n        if (token == ''){\r\n            alert('Você precisa estar logado!')\r\n            history.push('/login')\r\n        }\r\n    }, [token])\r\n\r\n    async function getTema(){\r\n        await busca('/tema', setTema, {\r\n            headers: {\r\n                'Authorization':token\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getTema()\r\n    }, [temas.length])\r\n    return(\r\n        <>\r\n        {\r\n            temas.map(tema => ( \r\n            <Box m={2}>\r\n                <Card variant='outlined'>\r\n                    <CardContent>\r\n                        <Typography color='textSecondary' gutterBottom>\r\n                            Tema\r\n                        </Typography>\r\n                        <Typography variant='h5' component='h2'>\r\n                          {tema.descricao}\r\n                        </Typography>\r\n                    </CardContent>\r\n                <CardActions>\r\n                    <Box display='flex' justifyContent='center' mb={1.5}>\r\n                        <Link to= {`/formularioTema/${tema.id}`} className= 'text-decorator-none'>\r\n                        <Box mx={1}>\r\n                            <Button variant='contained' className= 'marginLeft' size='small' color='primary'>\r\n                                Atualizar\r\n                            </Button>        \r\n                        </Box>\r\n                        </Link>\r\n                        <Link to= {`/deletarTema/${tema.id}`} className='text-decorator-none'>\r\n                            <Box mx={1}>\r\n                                <Button variant='contained' size='small' color='secondary'>\r\n                                    Deletar\r\n                                </Button>\r\n                            </Box>\r\n                        </Link>     \r\n                    </Box>   \r\n                </CardActions>\r\n                </Card>\r\n            </Box>\r\n        ))}\r\n        \r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default  ListaTema;","C:\\Users\\Thatiane\\Desktop\\BlogPessoalFrontEnd\\blog-pessoal\\src\\components\\postagens\\tabPostagem\\TabPostagem.tsx",["168"],[],"import React, {useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {AppBar, Tab, Tabs, Box, Typography} from '@material-ui/core';\r\nimport {TabContext, TabPanel} from '@material-ui/lab';\r\n\r\nimport ListaPostagem from '../listaPostagem/ListaPostagem';\r\nimport './TabPostagem.css';\r\n\r\nfunction TabPostagem(){\r\n\r\n    const [value, setValue] = useState('1')\r\n    function handleChange(event: React.ChangeEvent<{}>, newValue: string){\r\n        setValue(newValue);\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <TabContext value ={value}> \r\n                <AppBar position='static'> \r\n                    <Tabs centered indicatorColor='secondary' onChange={handleChange}>\r\n                        <Tab label='Todas as Postagems' value='1'/>\r\n                        <Tab label='Sobre nós' value='2'/>\r\n                    </Tabs>\r\n                </AppBar>\r\n                <TabPanel value='1'>\r\n                    <Box display='flex' flexWrap='wrap' justifyContent='center'>\r\n                        <ListaPostagem/>\r\n                    </Box>\r\n                </TabPanel>\r\n                <TabPanel value='2'>\r\n                    <Typography variant='h5' gutterBottom color= 'textPrimary' component='h5'align='center' className='titulo'>Sobre nós</Typography>\r\n                    <Typography variant='body1' gutterBottom color='textPrimary' align='justify'>Lorem ipsum dolor, sit amet consectetur \r\n                    adipisicing elit. Laudantium nostrum aperiam commodi pariatur consequatur voluptatum repellendus et praesentium hic \r\n                    tempora?\r\n                    <p> Lorem ipsum dolor, sit amet consectetur adipisicing elit. Ut sed ratione sint libero nemo nihil, velit modi officiis id aliquam \r\n                        dolor totam beatae ex iste dicta obcaecati. Illo, explicabo vitae!\r\n                        Lorem ipsum dolor sit amet consectetur adipisicing elit. Aspernatur nostrum similique laborum magnam distinctio nihil nesciunt,\r\n                        rerum modi facere libero quibusdam? Quia assumenda beatae saepe, quibusdam cum atque dignissimos similique!</p></Typography>\r\n                </TabPanel>\r\n\r\n            </TabContext>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default  TabPostagem;","C:\\Users\\Thatiane\\Desktop\\BlogPessoalFrontEnd\\blog-pessoal\\src\\components\\postagens\\cadastroPost\\CadastroPost.tsx",["169","170","171","172","173"],[],"import React, { ChangeEvent, useEffect, useState } from 'react'\r\nimport { Container, Typography, TextField, Button, Select, InputLabel, MenuItem, FormControl, FormHelperText } from \"@material-ui/core\"\r\nimport './CadastroPost.css';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport Tema from '../../../models/Tema';\r\nimport useLocalStorage from 'react-use-localstorage';\r\nimport Postagem from '../../../models/Postagem';\r\nimport { busca, buscaId, post, put } from '../../../services/Service';\r\n\r\nfunction CadastroPost() {\r\n    let history = useHistory();\r\n    const { id } = useParams<{ id: string }>();\r\n    const [temas, setTemas] = useState<Tema[]>([])\r\n    const [token, setToken] = useLocalStorage('token');\r\n\r\n    useEffect(() => {\r\n        if (token == \"\") {\r\n            alert(\"Você precisa estar logado\")\r\n            history.push(\"/login\")\r\n\r\n        }\r\n    }, [token])\r\n\r\n    const [tema, setTema] = useState<Tema>(\r\n        {\r\n            id: 0,\r\n            descricao: ''\r\n        })\r\n    const [postagem, setPostagem] = useState<Postagem>({\r\n        id: 0,\r\n        titulo: '',\r\n        texto: '',\r\n        tema: null\r\n    })\r\n\r\n    useEffect(() => { \r\n        setPostagem({\r\n            ...postagem,\r\n            tema: tema\r\n        })\r\n    }, [tema])\r\n\r\n    useEffect(() => {\r\n        getTemas()\r\n        if (id !== undefined) {\r\n            findByIdPostagem(id)\r\n        }\r\n    }, [id])\r\n\r\n    async function getTemas() {\r\n        await busca(\"/tema\", setTemas, {\r\n            headers: {\r\n                'Authorization': token\r\n            }\r\n        })\r\n    }\r\n\r\n    async function findByIdPostagem(id: string) {\r\n        await buscaId(`postagens/${id}`, setPostagem, {\r\n            headers: {\r\n                'Authorization': token\r\n            }\r\n        })\r\n    }\r\n\r\n    function updatedPostagem(e: ChangeEvent<HTMLInputElement>) {\r\n\r\n        setPostagem({\r\n            ...postagem,\r\n            [e.target.name]: e.target.value,\r\n            tema: tema\r\n        })\r\n\r\n    }\r\n\r\n    async function onSubmit(e: ChangeEvent<HTMLFormElement>) {\r\n        e.preventDefault()\r\n\r\n        if (id !== undefined) {\r\n            put(`/postagens`, postagem, setPostagem, {\r\n                headers: {\r\n                    'Authorization': token\r\n                }\r\n            })\r\n            alert('Postagem atualizada com sucesso');\r\n        } else {\r\n            post(`/postagens`, postagem, setPostagem, {\r\n                headers: {\r\n                    'Authorization': token\r\n                }\r\n            })\r\n            alert('Postagem cadastrada com sucesso');\r\n        }\r\n        back()\r\n\r\n    }\r\n\r\n    function back() {\r\n        history.push('/posts')\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth=\"sm\" className=\"topo\">\r\n            <form onSubmit={onSubmit}>\r\n                <Typography variant=\"h3\" color=\"textSecondary\" component=\"h1\" align=\"center\" >Formulário de cadastro postagem</Typography>\r\n                <TextField value={postagem.titulo} onChange={(e: ChangeEvent<HTMLInputElement>) => updatedPostagem(e)} id=\"titulo\" label=\"titulo\" variant=\"outlined\" name=\"titulo\" margin=\"normal\" fullWidth />\r\n                <TextField value={postagem.texto} onChange={(e: ChangeEvent<HTMLInputElement>) => updatedPostagem(e)} id=\"texto\" label=\"texto\" name=\"texto\" variant=\"outlined\" margin=\"normal\" fullWidth />\r\n                \r\n\r\n                <FormControl >\r\n                    <InputLabel id=\"demo-simple-select-helper-label\">Tema </InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-helper-label\"\r\n                        id=\"demo-simple-select-helper\"\r\n                        onChange={(e) => buscaId(`/tema/${e.target.value}`, setTema, {\r\n                            headers: {\r\n                                'Authorization': token\r\n                            }\r\n                        })}>\r\n                        {\r\n                            temas.map(tema => (\r\n                                <MenuItem value={tema.id}>{tema.descricao}</MenuItem>\r\n                            ))\r\n                        }\r\n                    </Select>\r\n                    <FormHelperText>Escolha um tema para a postagem</FormHelperText>\r\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                        Finalizar\r\n                    </Button>\r\n                </FormControl>\r\n            </form>\r\n        </Container>\r\n    )\r\n}\r\nexport default CadastroPost;","C:\\Users\\Thatiane\\Desktop\\BlogPessoalFrontEnd\\blog-pessoal\\src\\components\\temas\\cadastroTema\\CadastroTema.tsx",["174","175","176","177"],[],"import React, {useState, useEffect, ChangeEvent} from 'react'\r\nimport { Container, Typography, TextField, Button } from \"@material-ui/core\"\r\nimport {useHistory, useParams } from 'react-router-dom'\r\nimport './CadastroTema.css';\r\nimport useLocalStorage from 'react-use-localstorage';\r\nimport Tema from '../../../models/Tema';\r\nimport { buscaId, post, put } from '../../../services/Service';\r\n\r\n\r\nfunction CadastroTema() {\r\n    let history = useHistory();\r\n    const { id } = useParams<{id: string}>();\r\n    const [token, setToken] = useLocalStorage('token');\r\n    const [tema, setTema] = useState<Tema>({\r\n        id: 0,\r\n        descricao: ''\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (token == \"\") {\r\n            alert(\"Você precisa estar logado\")\r\n            history.push(\"/login\")\r\n    \r\n        }\r\n    }, [token])\r\n\r\n    useEffect(() =>{\r\n        if(id !== undefined){\r\n            findById(id)\r\n        }\r\n    }, [id])\r\n\r\n    async function findById(id: string) {\r\n        buscaId(`/tema/${id}`, setTema, {\r\n            headers: {\r\n              'Authorization': token\r\n            }\r\n          })\r\n        }\r\n\r\n        function updatedTema(e: ChangeEvent<HTMLInputElement>) {\r\n\r\n            setTema({\r\n                ...tema,\r\n                [e.target.name]: e.target.value,\r\n            })\r\n    \r\n        }\r\n        \r\n        async function onSubmit(e: ChangeEvent<HTMLFormElement>) {\r\n            e.preventDefault()\r\n            console.log(\"tema \" + JSON.stringify(tema))\r\n    \r\n            if (id !== undefined) {\r\n                console.log(tema)\r\n                put(`/tema`, tema, setTema, {\r\n                    headers: {\r\n                        'Authorization': token\r\n                    }\r\n                })\r\n                alert('Tema atualizado com sucesso');\r\n            } else {\r\n                post(`/tema`, tema, setTema, {\r\n                    headers: {\r\n                        'Authorization': token\r\n                    }\r\n                })\r\n                alert('Tema cadastrado com sucesso');\r\n            }\r\n            back()\r\n    \r\n        }\r\n    \r\n        function back() {\r\n            history.push('/temas')\r\n        }\r\n  \r\n    return (\r\n        <Container maxWidth=\"sm\" className=\"topo\">\r\n            <form onSubmit={onSubmit}>\r\n                <Typography variant=\"h3\" color=\"textSecondary\" component=\"h1\" align=\"center\" >Formulário de cadastro tema</Typography>\r\n                <TextField value={tema.descricao} onChange={(e: ChangeEvent<HTMLInputElement>) => updatedTema(e)} id=\"descricao\" label=\"descricao\" variant=\"outlined\" name=\"descricao\" margin=\"normal\" fullWidth />\r\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                    Finalizar\r\n                </Button>\r\n            </form>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CadastroTema;","C:\\Users\\Thatiane\\Desktop\\BlogPessoalFrontEnd\\blog-pessoal\\src\\components\\postagens\\deletarPostagem\\DeletarPostagem.tsx",["178","179","180","181"],[],"import React, {useEffect, useState} from 'react';\r\nimport {Box, Card, CardContent, Typography, CardActions, Button} from '@material-ui/core';\r\nimport './DeletarPostagem.css';\r\nimport {useHistory, useParams} from 'react-router-dom';\r\nimport useLocalStorage from 'react-use-localstorage';\r\nimport Postagem from '../../../models/Postagem';\r\nimport { buscaId, deleteId } from '../../../services/Service';\r\n\r\nfunction DeletarPostagem(){\r\n\r\n    let history = useHistory();\r\n    const { id } = useParams<{id: string}>();\r\n    const [token, setToken] = useLocalStorage('token');\r\n    const [post, setPosts] = useState<Postagem>()\r\n\r\n    useEffect(() => {\r\n        if (token == \"\") {\r\n            alert(\"Você precisa estar logado\")\r\n            history.push(\"/login\")\r\n    \r\n        }\r\n    }, [token])\r\n\r\n    useEffect(() =>{\r\n        if(id !== undefined){\r\n            findById(id)\r\n        }\r\n    }, [id])\r\n\r\n    async function findById(id: string) {\r\n        buscaId(`/postagens/${id}`, setPosts, {\r\n            headers: {\r\n              'Authorization': token\r\n            }\r\n          })\r\n        }\r\n\r\n        function sim() {\r\n            history.push('/postagens')\r\n            deleteId(`/postagens/${id}`, {\r\n              headers: {\r\n                'Authorization': token\r\n              }\r\n            });\r\n            alert('Postagem deletada com sucesso');\r\n          }\r\n        \r\n          function nao() {\r\n            history.push('/postagens')\r\n          }\r\n\r\n    return (\r\n        <>\r\n            <Box m={2}>\r\n                <Card variant='outlined'></Card>\r\n                    <CardContent>\r\n                        <Box justifyContent='center'>\r\n                            <Typography color='textSecondary' gutterBottom>\r\n                                Deseja deletar a postagem:\r\n                            </Typography>\r\n                            <Typography color='textSecondary'>\r\n                                {post?.titulo}\r\n                            </Typography>\r\n                        </Box>\r\n                    </CardContent>\r\n              <CardActions>\r\n                <Box display='flex' justifyContent='start' ml={1.0} mb={2}>\r\n                    <Box mx={2}>            \r\n                        <Button onClick={sim} variant='contained' className='marginLeft' size='large' color='primary'>\r\n                            Sim\r\n                        </Button>\r\n                    </Box>\r\n                    <Box mx={2}>\r\n                        <Button onClick={nao} variant='contained' size='large' color='secondary'>\r\n                            Não\r\n                        </Button>\r\n                    </Box>\r\n                </Box>\r\n                </CardActions>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DeletarPostagem;","C:\\Users\\Thatiane\\Desktop\\BlogPessoalFrontEnd\\blog-pessoal\\src\\components\\temas\\deletarTema\\DeletarTema.tsx",["182","183","184","185"],[],"import React, { useEffect, useState } from 'react'\r\nimport {Box, Card, CardActions, CardContent, Button, Typography} from '@material-ui/core';\r\nimport './DeletarTema.css';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport useLocalStorage from 'react-use-localstorage';\r\nimport { buscaId, deleteId } from '../../../services/Service';\r\nimport Tema from '../../../models/Tema';\r\n\r\n\r\nfunction DeletarTema() {\r\n    let history = useHistory();\r\n    const { id } = useParams<{id: string}>();\r\n    const [token, setToken] = useLocalStorage('token');\r\n    const [tema, setTema] = useState<Tema>()\r\n\r\n    useEffect(() => {\r\n        if (token == \"\") {\r\n            alert(\"Você precisa estar logado\")\r\n            history.push(\"/login\")\r\n    \r\n        }\r\n    }, [token])\r\n\r\n    useEffect(() =>{\r\n        if(id !== undefined){\r\n            findById(id)\r\n        }\r\n    }, [id])\r\n\r\n    async function findById(id: string) {\r\n        buscaId(`/tema/${id}`, setTema, {\r\n            headers: {\r\n              'Authorization': token\r\n            }\r\n          })\r\n        }\r\n\r\n        function sim() {\r\n            history.push('/temas')\r\n            deleteId(`/tema/${id}`, {\r\n              headers: {\r\n                'Authorization': token\r\n              }\r\n            });\r\n            alert('Tema deletado com sucesso');\r\n          }\r\n        \r\n          function nao() {\r\n            history.push('/temas')\r\n          }\r\n          \r\n  return (\r\n    <>\r\n      <Box m={2}>\r\n        <Card variant=\"outlined\">\r\n          <CardContent>\r\n            <Box justifyContent=\"center\">\r\n              <Typography color=\"textSecondary\" gutterBottom>\r\n                Deseja deletar o tema:\r\n              </Typography>\r\n              <Typography color=\"textSecondary\">\r\n                {tema?.descricao}\r\n              </Typography>\r\n            </Box>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Box display=\"flex\" justifyContent=\"start\" ml={1.0} mb={2} >\r\n              <Box mx={2}>\r\n                <Button onClick={sim} variant=\"contained\" className=\"marginLeft\" size='large' color=\"primary\">\r\n                  Sim\r\n                </Button>\r\n              </Box>\r\n              <Box mx={2}>\r\n                <Button  onClick={nao} variant=\"contained\" size='large' color=\"secondary\">\r\n                  Não\r\n                </Button>\r\n              </Box>\r\n            </Box>\r\n          </CardActions>\r\n        </Card>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\nexport default DeletarTema;","C:\\Users\\Thatiane\\Desktop\\BlogPessoalFrontEnd\\blog-pessoal\\src\\components\\postagens\\modalPostagem\\ModalPostagem.tsx",[],[],"C:\\Users\\Thatiane\\Desktop\\BlogPessoalFrontEnd\\blog-pessoal\\src\\store\\store.ts",["186"],[],"C:\\Users\\Thatiane\\Desktop\\BlogPessoalFrontEnd\\blog-pessoal\\src\\store\\tokens\\tokensReducer.ts",[],[],"C:\\Users\\Thatiane\\Desktop\\BlogPessoalFrontEnd\\blog-pessoal\\src\\store\\tokens\\actions.ts",[],[],{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","severity":1,"message":"192","line":18,"column":29,"nodeType":"193","messageId":"194","endLine":18,"endColumn":93,"fix":"195"},{"ruleId":"191","severity":1,"message":"192","line":21,"column":29,"nodeType":"193","messageId":"194","endLine":21,"endColumn":90,"fix":"196"},{"ruleId":"191","severity":1,"message":"192","line":24,"column":29,"nodeType":"193","messageId":"194","endLine":24,"endColumn":97,"fix":"197"},{"ruleId":"187","replacedBy":"198"},{"ruleId":"189","replacedBy":"199"},{"ruleId":"200","severity":1,"message":"201","line":19,"column":17,"nodeType":"202","messageId":"203","endLine":19,"endColumn":19},{"ruleId":"204","severity":1,"message":"205","line":24,"column":6,"nodeType":"206","endLine":24,"endColumn":13,"suggestions":"207"},{"ruleId":"191","severity":1,"message":"192","line":28,"column":21,"nodeType":"193","messageId":"194","endLine":28,"endColumn":85,"fix":"208"},{"ruleId":"191","severity":1,"message":"192","line":31,"column":21,"nodeType":"193","messageId":"194","endLine":31,"endColumn":82,"fix":"209"},{"ruleId":"191","severity":1,"message":"192","line":34,"column":21,"nodeType":"193","messageId":"194","endLine":34,"endColumn":89,"fix":"210"},{"ruleId":"191","severity":1,"message":"192","line":37,"column":21,"nodeType":"193","messageId":"194","endLine":37,"endColumn":79,"fix":"211"},{"ruleId":"212","severity":1,"message":"213","line":6,"column":10,"nodeType":"214","messageId":"215","endLine":6,"endColumn":20},{"ruleId":"204","severity":1,"message":"216","line":40,"column":8,"nodeType":"206","endLine":40,"endColumn":15,"suggestions":"217"},{"ruleId":"212","severity":1,"message":"218","line":6,"column":8,"nodeType":"214","messageId":"215","endLine":6,"endColumn":17},{"ruleId":"200","severity":1,"message":"219","line":30,"column":26,"nodeType":"202","messageId":"203","endLine":30,"endColumn":28},{"ruleId":"204","severity":1,"message":"205","line":34,"column":8,"nodeType":"206","endLine":34,"endColumn":20,"suggestions":"220"},{"ruleId":"200","severity":1,"message":"201","line":49,"column":27,"nodeType":"202","messageId":"203","endLine":49,"endColumn":29},{"ruleId":"200","severity":1,"message":"201","line":20,"column":15,"nodeType":"202","messageId":"203","endLine":20,"endColumn":17},{"ruleId":"204","severity":1,"message":"205","line":25,"column":6,"nodeType":"206","endLine":25,"endColumn":13,"suggestions":"221"},{"ruleId":"204","severity":1,"message":"222","line":39,"column":6,"nodeType":"206","endLine":39,"endColumn":20,"suggestions":"223"},{"ruleId":"212","severity":1,"message":"224","line":12,"column":19,"nodeType":"214","messageId":"215","endLine":12,"endColumn":27},{"ruleId":"200","severity":1,"message":"201","line":16,"column":19,"nodeType":"202","messageId":"203","endLine":16,"endColumn":21},{"ruleId":"204","severity":1,"message":"205","line":20,"column":8,"nodeType":"206","endLine":20,"endColumn":15,"suggestions":"225"},{"ruleId":"204","severity":1,"message":"226","line":32,"column":8,"nodeType":"206","endLine":32,"endColumn":22,"suggestions":"227"},{"ruleId":"212","severity":1,"message":"228","line":2,"column":9,"nodeType":"214","messageId":"215","endLine":2,"endColumn":13},{"ruleId":"212","severity":1,"message":"224","line":14,"column":19,"nodeType":"214","messageId":"215","endLine":14,"endColumn":27},{"ruleId":"200","severity":1,"message":"201","line":17,"column":19,"nodeType":"202","messageId":"203","endLine":17,"endColumn":21},{"ruleId":"204","severity":1,"message":"205","line":22,"column":8,"nodeType":"206","endLine":22,"endColumn":15,"suggestions":"229"},{"ruleId":"204","severity":1,"message":"230","line":41,"column":8,"nodeType":"206","endLine":41,"endColumn":14,"suggestions":"231"},{"ruleId":"204","severity":1,"message":"232","line":48,"column":8,"nodeType":"206","endLine":48,"endColumn":12,"suggestions":"233"},{"ruleId":"212","severity":1,"message":"224","line":13,"column":19,"nodeType":"214","messageId":"215","endLine":13,"endColumn":27},{"ruleId":"200","severity":1,"message":"201","line":20,"column":19,"nodeType":"202","messageId":"203","endLine":20,"endColumn":21},{"ruleId":"204","severity":1,"message":"205","line":25,"column":8,"nodeType":"206","endLine":25,"endColumn":15,"suggestions":"234"},{"ruleId":"204","severity":1,"message":"235","line":31,"column":8,"nodeType":"206","endLine":31,"endColumn":12,"suggestions":"236"},{"ruleId":"212","severity":1,"message":"224","line":13,"column":19,"nodeType":"214","messageId":"215","endLine":13,"endColumn":27},{"ruleId":"200","severity":1,"message":"201","line":17,"column":19,"nodeType":"202","messageId":"203","endLine":17,"endColumn":21},{"ruleId":"204","severity":1,"message":"205","line":22,"column":8,"nodeType":"206","endLine":22,"endColumn":15,"suggestions":"237"},{"ruleId":"204","severity":1,"message":"235","line":28,"column":8,"nodeType":"206","endLine":28,"endColumn":12,"suggestions":"238"},{"ruleId":"212","severity":1,"message":"224","line":13,"column":19,"nodeType":"214","messageId":"215","endLine":13,"endColumn":27},{"ruleId":"200","severity":1,"message":"201","line":17,"column":19,"nodeType":"202","messageId":"203","endLine":17,"endColumn":21},{"ruleId":"204","severity":1,"message":"205","line":22,"column":8,"nodeType":"206","endLine":22,"endColumn":15,"suggestions":"239"},{"ruleId":"204","severity":1,"message":"235","line":28,"column":8,"nodeType":"206","endLine":28,"endColumn":12,"suggestions":"240"},{"ruleId":"212","severity":1,"message":"241","line":1,"column":10,"nodeType":"214","messageId":"215","endLine":1,"endColumn":16},"no-native-reassign",["242"],"no-negated-in-lhs",["243"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"244","text":"245"},{"range":"246","text":"245"},{"range":"247","text":"245"},["242"],["243"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["248"],{"range":"249","text":"245"},{"range":"250","text":"245"},{"range":"251","text":"245"},{"range":"252","text":"245"},"@typescript-eslint/no-unused-vars","'fontWeight' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["253"],"'Container' is defined but never used.","Expected '!==' and instead saw '!='.",["254"],["255"],"React Hook useEffect has a missing dependency: 'getPost'. Either include it or remove the dependency array.",["256"],"'setToken' is assigned a value but never used.",["257"],"React Hook useEffect has a missing dependency: 'getTema'. Either include it or remove the dependency array.",["258"],"'Link' is defined but never used.",["259"],"React Hook useEffect has a missing dependency: 'postagem'. Either include it or remove the dependency array. You can also do a functional update 'setPostagem(p => ...)' if you only need 'postagem' in the 'setPostagem' call.",["260"],"React Hook useEffect has missing dependencies: 'findByIdPostagem' and 'getTemas'. Either include them or remove the dependency array.",["261"],["262"],"React Hook useEffect has a missing dependency: 'findById'. Either include it or remove the dependency array.",["263"],["264"],["265"],["266"],["267"],"'create' is defined but never used.","no-global-assign","no-unsafe-negation",[1006,1006]," rel=\"noreferrer\"",[1222,1222],[1446,1446],{"desc":"268","fix":"269"},[1238,1238],[1405,1405],[1579,1579],[1742,1742],{"desc":"270","fix":"271"},{"desc":"272","fix":"273"},{"desc":"268","fix":"274"},{"desc":"275","fix":"276"},{"desc":"268","fix":"277"},{"desc":"278","fix":"279"},{"desc":"268","fix":"280"},{"desc":"281","fix":"282"},{"desc":"283","fix":"284"},{"desc":"268","fix":"285"},{"desc":"286","fix":"287"},{"desc":"268","fix":"288"},{"desc":"286","fix":"289"},{"desc":"268","fix":"290"},{"desc":"286","fix":"291"},"Update the dependencies array to be: [history, token]",{"range":"292","text":"293"},"Update the dependencies array to be: [dispatch, history, token]",{"range":"294","text":"295"},"Update the dependencies array to be: [history, userResult]",{"range":"296","text":"297"},{"range":"298","text":"293"},"Update the dependencies array to be: [getPost, posts.length]",{"range":"299","text":"300"},{"range":"301","text":"293"},"Update the dependencies array to be: [getTema, temas.length]",{"range":"302","text":"303"},{"range":"304","text":"293"},"Update the dependencies array to be: [postagem, tema]",{"range":"305","text":"306"},"Update the dependencies array to be: [findByIdPostagem, getTemas, id]",{"range":"307","text":"308"},{"range":"309","text":"293"},"Update the dependencies array to be: [findById, id]",{"range":"310","text":"311"},{"range":"312","text":"293"},{"range":"313","text":"311"},{"range":"314","text":"293"},{"range":"315","text":"311"},[798,805],"[history, token]",[1172,1179],"[dispatch, history, token]",[996,1008],"[history, userResult]",[831,838],[1035,1049],"[getPost, posts.length]",[722,729],[954,968],"[getTema, temas.length]",[887,894],[1275,1281],"[postagem, tema]",[1414,1418],"[findByIdPostagem, getTemas, id]",[812,819],[921,925],"[findById, id]",[784,791],[893,897],[767,774],[876,880]]