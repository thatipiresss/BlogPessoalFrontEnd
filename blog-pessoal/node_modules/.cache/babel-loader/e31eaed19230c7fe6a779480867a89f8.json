{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thatiane\\\\Desktop\\\\BlogPessoalFrontEnd\\\\blog-pessoal\\\\src\\\\components\\\\temas\\\\cadastroTema\\\\CadastroTema.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Container, Typography, TextField, Button } from \"@material-ui/core\";\nimport { useHistory, useParams } from 'react-router-dom';\nimport './CadastroTema.css';\nimport useLocalStorage from 'react-use-localstorage';\nimport { buscaId, post, put } from '../../../services/Service';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CadastroTema() {\n  _s();\n\n  let history = useHistory();\n  const {\n    id\n  } = useParams();\n  const [token, setToken] = useLocalStorage('token');\n  const [tema, setTema] = useState({\n    id: 0,\n    descricao: ''\n  });\n  useEffect(() => {\n    if (token == \"\") {\n      toast.error('Você precisa estar logado', {\n        position: 'top-right',\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        //se colocar o mouse em cima, segurar o alerta\n        draggable: false,\n        //mover a notificação de local\n        theme: 'colored',\n        //como o alerta deve ser exibido  \n        progress: undefined\n      });\n      history.push(\"/login\");\n    }\n  }, [token]);\n  useEffect(() => {\n    if (id !== undefined) {\n      findById(id);\n    }\n  }, [id]);\n\n  async function findById(id) {\n    buscaId(`/tema/${id}`, setTema, {\n      headers: {\n        'Authorization': token\n      }\n    });\n  }\n\n  function updatedTema(e) {\n    setTema({ ...tema,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  async function onSubmit(e) {\n    e.preventDefault();\n    console.log(\"tema \" + JSON.stringify(tema));\n\n    if (id !== undefined) {\n      console.log(tema);\n      put(`/tema`, tema, setTema, {\n        headers: {\n          'Authorization': token\n        }\n      });\n      toast.success('Tema atualizado com sucesso', {\n        position: 'top-right',\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        //se colocar o mouse em cima, segurar o alerta\n        draggable: false,\n        //mover a notificação de local\n        theme: 'colored',\n        //como o alerta deve ser exibido  \n        progress: undefined\n      });\n    } else {\n      post(`/tema`, tema, setTema, {\n        headers: {\n          'Authorization': token\n        }\n      });\n      toast.success('Tema cadastrado com sucesso', {\n        position: 'top-right',\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        //se colocar o mouse em cima, segurar o alerta\n        draggable: false,\n        //mover a notificação de local\n        theme: 'colored',\n        //como o alerta deve ser exibido  \n        progress: undefined\n      });\n    }\n\n    back();\n  }\n\n  function back() {\n    history.push('/temas');\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    className: \"topo\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        color: \"textSecondary\",\n        component: \"h1\",\n        align: \"center\",\n        children: \"Formul\\xE1rio de cadastro tema\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        value: tema.descricao,\n        onChange: e => updatedTema(e),\n        id: \"descricao\",\n        label: \"descricao\",\n        variant: \"outlined\",\n        name: \"descricao\",\n        margin: \"normal\",\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Finalizar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CadastroTema, \"3ViO0ET7/4mo5fM2QIQ8EkZj5r0=\", false, function () {\n  return [useHistory, useParams, useLocalStorage];\n});\n\n_c = CadastroTema;\nexport default CadastroTema;\n\nvar _c;\n\n$RefreshReg$(_c, \"CadastroTema\");","map":{"version":3,"sources":["C:/Users/Thatiane/Desktop/BlogPessoalFrontEnd/blog-pessoal/src/components/temas/cadastroTema/CadastroTema.tsx"],"names":["React","useState","useEffect","Container","Typography","TextField","Button","useHistory","useParams","useLocalStorage","buscaId","post","put","toast","CadastroTema","history","id","token","setToken","tema","setTema","descricao","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","theme","progress","undefined","push","findById","headers","updatedTema","e","target","name","value","onSubmit","preventDefault","console","log","JSON","stringify","success","back"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, ChangeEvent} from 'react'\r\nimport { Container, Typography, TextField, Button } from \"@material-ui/core\"\r\nimport {useHistory, useParams } from 'react-router-dom'\r\nimport './CadastroTema.css';\r\nimport useLocalStorage from 'react-use-localstorage';\r\nimport Tema from '../../../models/Tema';\r\nimport { buscaId, post, put } from '../../../services/Service';\r\nimport {toast} from 'react-toastify';\r\n\r\n\r\n\r\nfunction CadastroTema() {\r\n    let history = useHistory();\r\n    const { id } = useParams<{id: string}>();\r\n    const [token, setToken] = useLocalStorage('token');\r\n    const [tema, setTema] = useState<Tema>({\r\n        id: 0,\r\n        descricao: ''\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (token == \"\") {\r\n                toast.error('Você precisa estar logado', {\r\n                position: 'top-right',\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true, //se colocar o mouse em cima, segurar o alerta\r\n                draggable: false, //mover a notificação de local\r\n                theme: 'colored', //como o alerta deve ser exibido  \r\n                progress: undefined,\r\n            });\r\n            history.push(\"/login\")\r\n    \r\n        }\r\n    }, [token])\r\n\r\n    useEffect(() =>{\r\n        if(id !== undefined){\r\n            findById(id)\r\n        }\r\n    }, [id])\r\n\r\n    async function findById(id: string) {\r\n        buscaId(`/tema/${id}`, setTema, {\r\n            headers: {\r\n              'Authorization': token\r\n            }\r\n          })\r\n        }\r\n\r\n        function updatedTema(e: ChangeEvent<HTMLInputElement>) {\r\n\r\n            setTema({\r\n                ...tema,\r\n                [e.target.name]: e.target.value,\r\n            })\r\n    \r\n        }\r\n        \r\n        async function onSubmit(e: ChangeEvent<HTMLFormElement>) {\r\n            e.preventDefault()\r\n            console.log(\"tema \" + JSON.stringify(tema))\r\n    \r\n            if (id !== undefined) {\r\n                console.log(tema)\r\n                put(`/tema`, tema, setTema, {\r\n                    headers: {\r\n                        'Authorization': token\r\n                    }\r\n                })\r\n                \r\n                toast.success('Tema atualizado com sucesso', {\r\n                    position: 'top-right',\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true, //se colocar o mouse em cima, segurar o alerta\r\n                    draggable: false, //mover a notificação de local\r\n                    theme: 'colored', //como o alerta deve ser exibido  \r\n                    progress: undefined,\r\n                });\r\n            } else {\r\n                post(`/tema`, tema, setTema, {\r\n                    headers: {\r\n                        'Authorization': token\r\n                    }\r\n                })\r\n               \r\n                    toast.success('Tema cadastrado com sucesso', {\r\n                    position: 'top-right',\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true, //se colocar o mouse em cima, segurar o alerta\r\n                    draggable: false, //mover a notificação de local\r\n                    theme: 'colored', //como o alerta deve ser exibido  \r\n                    progress: undefined,\r\n                });\r\n            }\r\n            back()\r\n    \r\n        }\r\n    \r\n        function back() {\r\n            history.push('/temas')\r\n        }\r\n  \r\n    return (\r\n        <Container maxWidth=\"sm\" className=\"topo\">\r\n            <form onSubmit={onSubmit}>\r\n                <Typography variant=\"h3\" color=\"textSecondary\" component=\"h1\" align=\"center\" >Formulário de cadastro tema</Typography>\r\n                <TextField value={tema.descricao} onChange={(e: ChangeEvent<HTMLInputElement>) => updatedTema(e)} id=\"descricao\" label=\"descricao\" variant=\"outlined\" name=\"descricao\" margin=\"normal\" fullWidth />\r\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                    Finalizar\r\n                </Button>\r\n            </form>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CadastroTema;"]},"metadata":{},"sourceType":"module"}