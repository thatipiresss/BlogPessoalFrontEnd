{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thatiane\\\\Desktop\\\\BlogPessoalFrontEnd\\\\blog-pessoal\\\\src\\\\components\\\\temas\\\\cadastroTema\\\\CadastroTema.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Container, Typography, TextField, Button } from '@material-ui/core';\nimport { useHistory, useParams } from 'react-router-dom';\nimport './CadastroTema.css';\nimport useLocalStorage from 'react-use-localstorage';\nimport { buscaId, post, put } from '../../../services/Service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CadastroTema() {\n  _s();\n\n  let history = useHistory();\n  const {\n    id\n  } = useParams();\n  const [token, setToken] = useLocalStorage('token');\n  const [tema, setTema] = useState({\n    id: 0,\n    descricao: ''\n  });\n  useEffect(() => {\n    if (token == '') {\n      alert('Você precisa estar logado');\n      history.push('login');\n    }\n  }, [token]);\n  useEffect(() => {\n    if (id !== undefined) {\n      findById(id);\n    }\n  }, [id]);\n\n  async function findById(id) {\n    buscaId(`/tema/${id}`, setTema, {\n      headers: {\n        'Authorization': token\n      }\n    });\n  }\n\n  function updatedTema(e) {\n    setTema({ ...tema,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  async function onSubmit(e) {\n    e.preventDefault();\n    console.log('tema' + JSON.stringify(tema));\n\n    if (id !== undefined) {\n      console.log(tema);\n      put(`/tema`, tema, setTema, {\n        headers: {\n          'Authorization': token\n        }\n      });\n      alert('Tema atualizado com sucesso!');\n    } else {\n      post(`/tema`, tema, setTema, {\n        headers: {\n          'Authorization': token\n        }\n      });\n      alert('Tema cadastrado com sucesso!');\n    }\n\n    back();\n  }\n\n  function back() {\n    history.push('/temas');\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    className: \"topo\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        color: \"textSecondary\",\n        component: \"h1\",\n        align: \"center\",\n        children: \"Formul\\xE1rio para cadastro do tema \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        value: tema.descricao,\n        onChange: e => updatedTema(e),\n        id: \"descricao\",\n        label: \"descricao\",\n        variant: \"outlined\",\n        name: \"descricao\",\n        margin: \"normal\",\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Finalizar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CadastroTema, \"ZYdNybq4k8mIb8Xcv+SKgcMBDPs=\", false, function () {\n  return [useHistory, useParams, useLocalStorage];\n});\n\n_c = CadastroTema;\nexport default CadastroTema;\n\nvar _c;\n\n$RefreshReg$(_c, \"CadastroTema\");","map":{"version":3,"sources":["C:/Users/Thatiane/Desktop/BlogPessoalFrontEnd/blog-pessoal/src/components/temas/cadastroTema/CadastroTema.tsx"],"names":["React","useEffect","useState","Container","Typography","TextField","Button","useHistory","useParams","useLocalStorage","buscaId","post","put","CadastroTema","history","id","token","setToken","tema","setTema","descricao","alert","push","undefined","findById","headers","updatedTema","e","target","name","value","onSubmit","preventDefault","console","log","JSON","stringify","back"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, useEffect , useState, onSubmit} from 'react';\r\nimport {Container, Typography, TextField, Button} from '@material-ui/core';\r\nimport {useHistory, useParams} from 'react-router-dom';\r\nimport './CadastroTema.css';\r\nimport useLocalStorage from 'react-use-localstorage';\r\nimport Tema from '../../../models/Tema'\r\nimport { buscaId, post, put } from '../../../services/Service';\r\n\r\nfunction CadastroTema(){\r\n\r\n    let history =useHistory();\r\n    const {id} = useParams<{id: string}>();\r\n    const [token, setToken] = useLocalStorage('token');\r\n    const [tema, setTema] = useState<Tema>({\r\n        id: 0,\r\n        descricao:''\r\n    })\r\n\r\n    useEffect(()=>{\r\n        if(token ==''){\r\n            alert('Você precisa estar logado')\r\n            history.push('login')\r\n        }\r\n    }, [token])\r\n\r\n    useEffect(() =>{\r\n        if(id !== undefined){\r\n            findById(id)\r\n        }\r\n}, [id])\r\n\r\n    async function findById(id:string){\r\n        buscaId(`/tema/${id}`, setTema, {\r\n            headers:{\r\n                'Authorization': token\r\n            }\r\n        })\r\n    }\r\n\r\n    function updatedTema(e: ChangeEvent<HTMLInputElement>){\r\n        setTema({\r\n            ...tema,\r\n            [e.target.name]: e.target.value,\r\n        })\r\n    }\r\n\r\n    async function onSubmit(e:ChangeEvent<HTMLInputElement>){\r\n        e.preventDefault()\r\n        console.log('tema' + JSON.stringify(tema))\r\n\r\n        if(id !== undefined){\r\n            console.log(tema)\r\n            put (`/tema`, tema, setTema, {\r\n                headers: {\r\n                    'Authorization': token\r\n                }\r\n            })\r\n            alert('Tema atualizado com sucesso!');\r\n        }else { \r\n            post (`/tema`, tema, setTema, {\r\n            headers: {\r\n                'Authorization': token\r\n            }\r\n        })\r\n        alert('Tema cadastrado com sucesso!');\r\n\r\n        }\r\n        back()\r\n    }\r\n\r\n    function back(){\r\n        history.push('/temas')\r\n    }\r\n\r\n    return(\r\n        <Container maxWidth='sm' className= 'topo'>\r\n            <form onSubmit={onSubmit}>    \r\n                <Typography variant='h3' color='textSecondary' component='h1' align='center'>Formulário para cadastro do tema </Typography>\r\n                    <TextField value={tema.descricao} onChange={(e:ChangeEvent<HTMLInputElement>) => updatedTema(e)} id='descricao' label='descricao' variant='outlined' name='descricao' margin='normal' fullWidth/>\r\n                    <Button type='submit' variant='contained' color='primary'>\r\n                        Finalizar\r\n                    </Button>\r\n            </form>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CadastroTema;"]},"metadata":{},"sourceType":"module"}