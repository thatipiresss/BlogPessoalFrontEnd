{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thatiane\\\\Desktop\\\\BlogPessoalFrontEnd\\\\blog-pessoal\\\\src\\\\components\\\\postagens\\\\deletarPostagem\\\\DeletarPostagem.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Box, Card, CardContent, Typography, CardActions, Button } from '@material-ui/core';\nimport './DeletarPostagem.css';\nimport { useHistory, useParams } from 'react-router-dom';\nimport useLocalStorage from 'react-use-localstorage';\nimport { buscaId, deleteId } from '../../../services/Service';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction DeletarPostagem() {\n  _s();\n\n  let history = useHistory();\n  const {\n    id\n  } = useParams();\n  const [token, setToken] = useLocalStorage('token');\n  const [post, setPosts] = useState();\n  useEffect(() => {\n    if (token == \"\") {\n      toast.error('Você precisa estar logado', {\n        position: 'top-right',\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        //se colocar o mouse em cima, segurar o alerta\n        draggable: false,\n        //mover a notificação de local\n        theme: 'colored',\n        //como o alerta deve ser exibido  \n        progress: undefined\n      });\n      history.push(\"/login\");\n    }\n  }, [token]);\n  useEffect(() => {\n    if (id !== undefined) {\n      findById(id);\n    }\n  }, [id]);\n\n  async function findById(id) {\n    buscaId(`/postagens/${id}`, setPosts, {\n      headers: {\n        'Authorization': token\n      }\n    });\n  }\n\n  function sim() {\n    history.push('/postagens');\n    deleteId(`/postagens/${id}`, {\n      headers: {\n        'Authorization': token\n      }\n    });\n    toast.success('Postagem deletada com sucesso', {\n      position: 'top-right',\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      //se colocar o mouse em cima, segurar o alerta\n      draggable: false,\n      //mover a notificação de local\n      theme: 'colored',\n      //como o alerta deve ser exibido  \n      progress: undefined\n    });\n  }\n\n  function nao() {\n    history.push('/postagens');\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      m: 2,\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          justifyContent: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textSecondary\",\n            gutterBottom: true,\n            children: \"Deseja deletar a postagem:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textSecondary\",\n            children: post === null || post === void 0 ? void 0 : post.titulo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"start\",\n          ml: 1.0,\n          mb: 2,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            mx: 2,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: sim,\n              variant: \"contained\",\n              className: \"marginLeft\",\n              size: \"large\",\n              color: \"primary\",\n              children: \"Sim\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            mx: 2,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: nao,\n              variant: \"contained\",\n              size: \"large\",\n              color: \"secondary\",\n              children: \"N\\xE3o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(DeletarPostagem, \"VmAqOp3V+dET4e034S1C4DPeya0=\", false, function () {\n  return [useHistory, useParams, useLocalStorage];\n});\n\n_c = DeletarPostagem;\nexport default DeletarPostagem;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeletarPostagem\");","map":{"version":3,"sources":["C:/Users/Thatiane/Desktop/BlogPessoalFrontEnd/blog-pessoal/src/components/postagens/deletarPostagem/DeletarPostagem.tsx"],"names":["React","useEffect","useState","Box","Card","CardContent","Typography","CardActions","Button","useHistory","useParams","useLocalStorage","buscaId","deleteId","toast","DeletarPostagem","history","id","token","setToken","post","setPosts","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","theme","progress","undefined","push","findById","headers","sim","success","nao","titulo"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {Box, Card, CardContent, Typography, CardActions, Button} from '@material-ui/core';\r\nimport './DeletarPostagem.css';\r\nimport {useHistory, useParams} from 'react-router-dom';\r\nimport useLocalStorage from 'react-use-localstorage';\r\nimport Postagem from '../../../models/Postagem';\r\nimport { buscaId, deleteId } from '../../../services/Service';\r\nimport {toast} from 'react-toastify';\r\n\r\n\r\nfunction DeletarPostagem(){\r\n\r\n    let history = useHistory();\r\n    const { id } = useParams<{id: string}>();\r\n    const [token, setToken] = useLocalStorage('token');\r\n    const [post, setPosts] = useState<Postagem>()\r\n\r\n    useEffect(() => {\r\n        if (token == \"\") {\r\n                toast.error('Você precisa estar logado', {\r\n                position: 'top-right',\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true, //se colocar o mouse em cima, segurar o alerta\r\n                draggable: false, //mover a notificação de local\r\n                theme: 'colored', //como o alerta deve ser exibido  \r\n                progress: undefined,\r\n            });\r\n            history.push(\"/login\")\r\n    \r\n        }\r\n    }, [token])\r\n\r\n    useEffect(() =>{\r\n        if(id !== undefined){\r\n            findById(id)\r\n        }\r\n    }, [id])\r\n\r\n    async function findById(id: string) {\r\n        buscaId(`/postagens/${id}`, setPosts, {\r\n            headers: {\r\n              'Authorization': token\r\n            }\r\n          })\r\n        }\r\n\r\n        function sim() {\r\n            history.push('/postagens')\r\n            deleteId(`/postagens/${id}`, {\r\n              headers: {\r\n                'Authorization': token\r\n              }\r\n            });\r\n            toast.success('Postagem deletada com sucesso', {\r\n                position: 'top-right',\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true, //se colocar o mouse em cima, segurar o alerta\r\n                draggable: false, //mover a notificação de local\r\n                theme: 'colored', //como o alerta deve ser exibido  \r\n                progress: undefined,\r\n            });\r\n          }\r\n        \r\n          function nao() {\r\n            history.push('/postagens')\r\n          }\r\n\r\n    return (\r\n        <>\r\n            <Box m={2}>\r\n                <Card variant='outlined'></Card>\r\n                    <CardContent>\r\n                        <Box justifyContent='center'>\r\n                            <Typography color='textSecondary' gutterBottom>\r\n                                Deseja deletar a postagem:\r\n                            </Typography>\r\n                            <Typography color='textSecondary'>\r\n                                {post?.titulo}\r\n                            </Typography>\r\n                        </Box>\r\n                    </CardContent>\r\n              <CardActions>\r\n                <Box display='flex' justifyContent='start' ml={1.0} mb={2}>\r\n                    <Box mx={2}>            \r\n                        <Button onClick={sim} variant='contained' className='marginLeft' size='large' color='primary'>\r\n                            Sim\r\n                        </Button>\r\n                    </Box>\r\n                    <Box mx={2}>\r\n                        <Button onClick={nao} variant='contained' size='large' color='secondary'>\r\n                            Não\r\n                        </Button>\r\n                    </Box>\r\n                </Box>\r\n                </CardActions>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DeletarPostagem;"]},"metadata":{},"sourceType":"module"}