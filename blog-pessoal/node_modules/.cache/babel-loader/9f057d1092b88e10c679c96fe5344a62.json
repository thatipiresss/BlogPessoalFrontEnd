{"ast":null,"code":"import { useState, useEffect, useCallback } from 'react';\n\nfunction useLocalStorage(key, initialValue) {\n  if (initialValue === void 0) {\n    initialValue = '';\n  }\n\n  var _useState = useState(function () {\n    return window.localStorage.getItem(key) || initialValue;\n  }),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  var setItem = function setItem(newValue) {\n    setValue(newValue);\n    window.localStorage.setItem(key, newValue);\n  };\n\n  useEffect(function () {\n    var newValue = window.localStorage.getItem(key);\n\n    if (value !== newValue) {\n      setValue(newValue || initialValue);\n    }\n  });\n  var handleStorage = useCallback(function (event) {\n    if (event.key === key && event.newValue !== value) {\n      setValue(event.newValue || initialValue);\n    }\n  }, [value]);\n  useEffect(function () {\n    window.addEventListener('storage', handleStorage);\n    return function () {\n      return window.removeEventListener('storage', handleStorage);\n    };\n  }, [handleStorage]);\n  return [value, setItem];\n}\n\nexport default useLocalStorage;","map":{"version":3,"mappings":";;SAEwBA,gBACtBC,KACAC;MAAAA;AAAAA,mBAAuB,EAAvBA;;;kBAE0BC,QAAQ,CAChC;AAAA,WAAMC,MAAM,CAACC,YAAPD,CAAoBE,OAApBF,CAA4BH,GAA5BG,KAAoCF,YAA1C;AADgC;MAA3BK;MAAOC;;AAId,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,QAAD;AACdF,YAAQ,CAACE,QAAD,CAARF;AACAJ,UAAM,CAACC,YAAPD,CAAoBK,OAApBL,CAA4BH,GAA5BG,EAAiCM,QAAjCN;AAFF;;AAKAO,WAAS,CAAC;AACR,QAAMD,QAAQ,GAAGN,MAAM,CAACC,YAAPD,CAAoBE,OAApBF,CAA4BH,GAA5BG,CAAjB;;AACA,QAAIG,KAAK,KAAKG,QAAd,EAAwB;AACtBF,cAAQ,CAACE,QAAQ,IAAIR,YAAb,CAARM;AACD;AAJM,IAATG;AAOA,MAAMC,aAAa,GAAGC,WAAW,CAC/B,UAACC,KAAD;AACE,QAAIA,KAAK,CAACb,GAANa,KAAcb,GAAda,IAAqBA,KAAK,CAACJ,QAANI,KAAmBP,KAA5C,EAAmD;AACjDC,cAAQ,CAACM,KAAK,CAACJ,QAANI,IAAkBZ,YAAnB,CAARM;AACD;AAJ4B,KAM/B,CAACD,KAAD,CAN+B,CAAjC;AASAI,WAAS,CAAC;AACRP,UAAM,CAACW,gBAAPX,CAAwB,SAAxBA,EAAmCQ,aAAnCR;AACA,WAAO;AAAA,aAAMA,MAAM,CAACY,mBAAPZ,CAA2B,SAA3BA,EAAsCQ,aAAtCR,CAAN;AAAP;AAFO,KAGN,CAACQ,aAAD,CAHM,CAATD;AAKA,SAAO,CAACJ,KAAD,EAAQE,OAAR,CAAP;AACD","names":["useLocalStorage","key","initialValue","useState","window","localStorage","getItem","value","setValue","setItem","newValue","useEffect","handleStorage","useCallback","event","addEventListener","removeEventListener"],"sources":["C:\\Users\\Thatiane\\Desktop\\BlogPessoalFrontEnd\\blog-pessoal\\node_modules\\react-use-localstorage\\src\\index.ts"],"sourcesContent":["import { Dispatch, useCallback, useEffect, useState } from 'react';\n\nexport default function useLocalStorage(\n  key: string,\n  initialValue: string = ''\n): [string, Dispatch<string>] {\n  const [value, setValue] = useState(\n    () => window.localStorage.getItem(key) || initialValue\n  );\n\n  const setItem = (newValue: string) => {\n    setValue(newValue);\n    window.localStorage.setItem(key, newValue);\n  };\n\n  useEffect(() => {\n    const newValue = window.localStorage.getItem(key);\n    if (value !== newValue) {\n      setValue(newValue || initialValue);\n    }\n  });\n\n  const handleStorage = useCallback(\n    (event: StorageEvent) => {\n      if (event.key === key && event.newValue !== value) {\n        setValue(event.newValue || initialValue);\n      }\n    },\n    [value]\n  );\n\n  useEffect(() => {\n    window.addEventListener('storage', handleStorage);\n    return () => window.removeEventListener('storage', handleStorage);\n  }, [handleStorage]);\n\n  return [value, setItem];\n}\n"]},"metadata":{},"sourceType":"module"}